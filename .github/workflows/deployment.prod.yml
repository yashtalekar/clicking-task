name: Deployment - Prod
on:
  push:
    branches:
      - strategic_task-prod
  pull_request:
    branches:
      - strategic_task-prod

env:
  HOST: 34.116.70.140
  USERNAME: deployer
  PORT: 22
  MTURK_NAME: my_mturk_user
  MTURK_TYPE: mturk
  USER_EMAIL: jaythaiduong.huynh@uq.edu.au
  USER_NAME: jaythaiduong.huynh
  REPO_DIR: ~/${{ github.event.repository.name }}-${{ github.ref_name }}-prod
  APP_NAME: ${{ github.event.repository.name }}-${{ github.ref_name }}-prod
  SCRIPT: deploy_prod.py

jobs:
  build-container:
    name: build-container
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v0.1.7
        with:
          # ssh host
          host: ${{ env.HOST }}
          # ssh port
          port: ${{ env.PORT }}
          # ssh username
          username: ${{ env.USERNAME }}
          # ssh password
          key: ${{ secrets.PRIVATE_KEY }}
          # execute commands
          script: if cd ${{ env.REPO_DIR }}; then git pull || true; else mkdir -p ${{ env.REPO_DIR }} && cd ${{ env.REPO_DIR }} && git clone https://github.com/${{ github.repository }}.git ${{ env.REPO_DIR }} && git checkout ${{ github.ref_name }}; fi

      - uses: appleboy/ssh-action@v0.1.7
        with:
          # ssh host
          host: ${{ env.HOST }}
          # ssh port
          port: ${{ env.PORT }}
          # ssh username
          username: ${{ env.USERNAME }}
          # ssh password
          key: ${{ secrets.PRIVATE_KEY }}
          # execute commands
          script: cd ${{ env.REPO_DIR }} && bash ./scripts/build-container.sh ${{ env.REPO_DIR }} ${{ env.APP_NAME }} ${{ env.USER_EMAIL }} ${{ env.USER_NAME }} ${{ secrets.HEROKU_API_KEY }} ${{ env.MTURK_TYPE }} ${{ env.MTURK_NAME }} ${{ secrets.MTURK_ACCESS_KEY_ID }} ${{ secrets.MTURK_SECRET_ACCESS_KEY }} ${{ secrets.DOTNETRC }} ${{ env.SCRIPT }}

  run-container:
    name: run-container
    needs: build-container
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v0.1.7
        with:
          # ssh host
          host: ${{ env.HOST }}
          # ssh port
          port: ${{ env.PORT }}
          # ssh username
          username: ${{ env.USERNAME }}
          # ssh password
          key: ${{ secrets.PRIVATE_KEY }}
          # execute commands
          script: cd ${{ env.REPO_DIR }} && docker volume create --driver local --opt type=none --opt device=$(pwd)/data --opt o=bind ${{ env.APP_NAME }}-volume && docker run -d --rm --init -v ${{ env.APP_NAME }}-volume:/mephisto/data --name ${{ env.APP_NAME }} -e HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }} -e SCRIPT=${{ env.SCRIPT }} ${{ env.APP_NAME }} && timeout 180 sh -c "while ! docker logs -f $(docker ps -q --filter ancestor=${{ env.APP_NAME }} --format="{{.ID}}")| grep -q 'https://www.mturk.com/mturk'; do sleep 1; done" && docker logs --tail=10 $(docker ps -q --filter ancestor=${{ env.APP_NAME }} --format="{{.ID}}")
